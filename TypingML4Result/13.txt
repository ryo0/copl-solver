 |- let k = (fun x -> (fun y -> x)) in ((k 3) true) : int by T-Let{
      |-fun x -> (fun y -> x) :  ('x7 -> ('x8 -> 'x7))  by T-Fun{
          x : 'x7 |-fun y -> x :  ('x9 -> 'x7)  by T-Fun{
               x : 'x7,y : 'x9 |- x : x by T-Var{};
          };
     };
     k : ('x7 -> ('x8 -> 'x7)) |- (k 3) true :  int  by T-App{
          k : ('x7 -> ('x8 -> 'x7)) |- k 3 :  ('x8 -> int)  by T-App{
               k : ('x7 -> ('x8 -> 'x7)) |- k : k by T-Var{};
               k : ('x7 -> ('x8 -> 'x7)) |- 3 : int by T-Int{};
          };
          k : ('x7 -> ('x8 -> 'x7)) |- true : bool by T-Bool{};
     };
};