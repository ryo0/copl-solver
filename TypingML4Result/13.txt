 |- let k = (fun x -> (fun y -> x)) in ((k 3) true) : int by T-Let{
      |-fun x -> (fun y -> x) :  ('x31 -> ('x32 -> 'x31))  by T-Fun{
          x : 'x31 |-fun y -> x :  ('x33 -> 'x31)  by T-Fun{
               x : 'x31,y : 'x33 |- x : 'x31 by T-Var{};
          };
     };
     k : ('x31 -> ('x32 -> 'x31)) |- (k 3) true :  int  by T-App{
          k : ('x31 -> ('x32 -> 'x31)) |- k 3 :  ('x32 -> int)  by T-App{
               k : ('x31 -> ('x32 -> 'x31)) |- k : ('x31 -> ('x32 -> 'x31)) by T-Var{};
               k : ('x31 -> ('x32 -> 'x31)) |- 3 : int by T-Int{};
          };
          k : ('x31 -> ('x32 -> 'x31)) |- true : bool by T-Bool{};
     };
};