 |- let k = (fun x -> (fun y -> x)) in ((k true) (fun x -> (x + 1))) : bool by T-Let{
      |-fun x -> (fun y -> x) :  ('x47 -> ('x48 -> 'x47))  by T-Fun{
          x : 'x47 |-fun y -> x :  ('x48 -> 'x47)  by T-Fun{
               x : 'x47,y : 'x48 |- x : 'x47 by T-Var{};
          };
     };
     k : ('x47 -> ('x48 -> 'x47)) |- (k true) (fun x -> (x + 1)) :  bool  by T-App{
          k : ('x47 -> ('x48 -> 'x47)) |- k true :  ('x48 -> bool)  by T-App{
               k : ('x47 -> ('x48 -> 'x47)) |- k : ('x47 -> ('x48 -> 'x47)) by T-Var{};
               k : ('x47 -> ('x48 -> 'x47)) |- true : bool by T-Bool{};
          };
          k : ('x47 -> ('x48 -> 'x47)) |-fun x -> (x + 1) :  (int -> int)  by T-Fun{
               k : ('x47 -> ('x48 -> 'x47)),x : int |- x + 1 : int by T-Plus{
                    k : ('x47 -> ('x48 -> 'x47)),x : int |- x : int by T-Var{};
                    k : ('x47 -> ('x48 -> 'x47)),x : int |- 1 : int by T-Int{};
               };
          };
     };
};